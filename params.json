{
  "name": "Diceware Passwords",
  "tagline": "Generation of secure passwords via dice and Machine Learning.",
  "body": "### Diceware Generator\r\nThis project's task was to implement a secure passphrase generator using the true randomness of dice, in an efficient way. [OpenCV](https://github.com/Itseez/opencv) 3.1 allows us to identify pips on a dice, and [Java's SecureRandom](https://docs.oracle.com/javase/7/docs/api/java/security/SecureRandom.html) allows us to generate nonces used for dictionaries and and word selection.\r\n\r\n### UI\r\nOut of the bag, there are option for the following: Number of passwords used in the passphrase, number of passwords consisting of random special characters, and number of passwords consisting of random numerical characters. There's also an option to capture a raw image or an image with the detections drawn on top, and to generate the random dictionaries.\r\n\r\n### Instructions\r\nDo not export this into a self-standing executable `.jar` file. There's probably way to do this, but because of the current structure, it's not possible to. Once running, you *must* first generate a new dictionary. A hash will be provided once it's finished generating. Then, have five dice thrown into the view of the camera, and ensure that all dice have been detected. Then click generate password, and repeat. \r\n\r\n### Known Bugs\r\n- Occasionally, OpenCV's libraries throw an unknown error.\r\n- If less than 5 dice are detected, then it crashes the program.\r\n- Even though there's double buffering in the livestream, it still flickers.\r\n- Performance Issues.\r\n- UI doesn't update as soon as it should.\r\n\r\n### Further Improvements\r\n- Any of the above bugs\r\n- More options (i.e. alphanumeric passwords, number of dice, etc., etc.) \r\n\r\n### More Information\r\nCheck out our [Github](https://github.com/edward-shen/diceware-generator) for more info.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}